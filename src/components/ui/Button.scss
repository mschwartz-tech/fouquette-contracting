@use '../../styles/variables';

/**
 * Button Component Styles
 * 
 * Implements the button styles according to the design system
 */

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: var(--button-height);
  padding: var(--button-padding);
  border-radius: var(--border-radius);
  font-family: var(--font-family);
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-body);
  cursor: pointer;
  border: none;
  outline: none;
  text-decoration: none;
  transition: 
    background-color var(--transition-duration-default) var(--transition-timing-default),
    color var(--transition-duration-default) var(--transition-timing-default),
    transform var(--transition-duration-fast) var(--transition-timing-default),
    box-shadow var(--transition-duration-default) var(--transition-timing-default),
    border-color var(--transition-duration-default) var(--transition-timing-default);
  
  // Ensure proper text alignment
  line-height: 1;
  
  // Add subtle hover effect
  &:hover:not(:disabled) {
    transform: translateY(-1px);
    will-change: transform;
  }
  
  // Add active state
  &:active:not(:disabled) {
    transform: translateY(0);
  }
  
  // Focus state for accessibility
  &:focus {
    outline: var(--focus-width) solid var(--focus-color);
    outline-offset: 2px;
  }
  
  // Disabled state
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
  
  // Primary variant (orange)
  &--primary {
    background-color: var(--button-primary-bg);
    color: var(--button-primary-text);
    
    &:hover:not(:disabled) {
      background-color: var(--color-primary-hover);
      color: var(--color-white);
      box-shadow: var(--shadow-level-1);
    }
    
    &:active:not(:disabled) {
      background-color: var(--color-primary-active);
      color: var(--color-white);
      box-shadow: none;
    }
    
    &:disabled {
      background-color: var(--button-primary-bg);
      color: var(--button-primary-text);
      box-shadow: none;
    }
  }
  
  // Secondary variant (black)
  &--secondary {
    background-color: var(--button-secondary-bg);
    color: var(--button-secondary-text);
    
    &:hover:not(:disabled) {
      background-color: var(--color-secondary-hover);
      color: var(--color-white);
      box-shadow: var(--shadow-level-1);
    }
    
    &:active:not(:disabled) {
      background-color: var(--color-secondary-active);
      color: var(--color-white);
      box-shadow: none;
    }
    
    &:disabled {
      background-color: var(--button-secondary-bg);
      color: var(--button-secondary-text);
      box-shadow: none;
    }
  }
  
  // Text variant
  &--text {
    background-color: transparent;
    color: var(--color-primary);
    padding: var(--spacing-sm) var(--spacing-md);
    height: auto;
    font-weight: var(--font-weight-regular);
    
    &:hover:not(:disabled) {
      background-color: var(--color-primary-transparent-light);
      color: var(--color-primary-hover);
      text-decoration: underline;
      transform: none; // No lift effect for text buttons
    }
    
    &:active:not(:disabled) {
      background-color: var(--color-primary-transparent-medium);
      color: var(--color-primary-active);
    }
    
    &:disabled {
      background-color: transparent;
      color: var(--color-primary);
      opacity: 0.6;
    }
  }
  
  // Size variants
  &--sm {
    height: 32px;
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: var(--font-size-small);
  }
  
  &--md {
    // Default size, already defined
  }
  
  &--lg {
    height: 48px;
    padding: var(--spacing-sm) var(--spacing-lg);
    font-size: calc(var(--font-size-body) + 2px);
  }
  
  // Full width variant
  &--full-width {
    width: 100%;
  }
}

// Responsive adjustments
@media (max-width: var(--breakpoint-mobile)) {
  .button {
    // Ensure minimum touch target of 44px on mobile
    min-height: var(--mobile-touch-target);
    
    // Improve tap highlight on mobile
    -webkit-tap-highlight-color: rgba(255, 102, 0, 0.1);
    
    // Slightly larger touch target on mobile
    &--sm {
      height: var(--mobile-touch-target);
      padding: var(--spacing-sm) var(--spacing-md);
      font-size: var(--font-size-body);
    }
    
    &--md {
      height: var(--mobile-button-height);
      padding: var(--spacing-sm) var(--spacing-lg);
    }
    
    &--lg {
      height: 52px;
      padding: var(--spacing-md) var(--spacing-xl);
    }
    
    // Reduce hover effects on mobile
    &:hover:not(:disabled) {
      transform: none;
    }
    
    // Ensure full width buttons work properly
    &--full-width {
      width: 100%;
      max-width: 100%;
    }
  }
}
